// Apex II - SOQL - O RETORNO DEL MAGO
MAGO INICIANTE

// 1
// Retorne todas as contas agrupadas pelo tipo de Neg√≥cio

SELECT Type FROM Account GROUP BY Type

// 2
// Some os valores de todas as oportunidades que foram perdidas no ultimo m√™s e agrupe
pelo motivo da perda

SELECT Stagename, Sum(Amount) FROM Opportunity WHERE CloseDate = Last_Month And Stagename = 'Closed lost' GROUP BY Stagename

// 3
// Retorne todos os contatos das contas que possuem contas pai

SELECT Name, (
SELECT Name From Contacts
) FROM Account

// 4
// Retorne o n√∫mero de registros de contatos da conta "Restaurante Gifara";

SELECT Name, (
SELECT id from Contacts
) FROM Account where Name = 'Restaurante Gifara'

// 5
// Retorne o n√∫mero de registros de Oportunidades da conta "Restaurante Gifara";

SELECT Name, (
SELECT id from Opportunities
) FROM Account where Name = 'Restaurante Gifara'

// 6
// Selecione todos os usu√°rios que fizeram o login m√™s passado

SELECT username FROM User where LAstLoginDate = Last_Month

// 7
// Selecione o Id e Nome dos tipos de registro do objeto Despesa e Oportunidade

OBS: Criado objeto chamado "Despesa", e dentro os campos ¬®Tipo¬® e relacionamento mestre-detalhe vinculado ao objeto ¬®Oportunidade¬®

SELECT Name, Type, (
  SELECT Id, Name, Tipo__c FROM Despesas__r
) FROM Opportunity

// 8
// Selecione todos os Leads que possuem o Email igual

OBS: COUNT n√£o funciona com WHERE!!!

SELECT Email, COUNT(Id) FROM Lead GROUP BY Email HAVING COUNT(Id) > 1

// 9
// Selecione todas as contas que come√ßam com Soul e Terminam com Code

SELECT Name FROM Account WHERE Name LIKE 'Soul%' AND Name LIKE '%Code'

// 10
// Selecione todos os casos que s√£o est√£o abertos mais de 2 semanas

SELECT CaseNumber FROM Case WHERE CreatedDate = LAST_N_DAYS:14

// 11
// Selecione qual s√£o os tipos de caso que s√£o mais abertos durante o m√™s atual

SELECT Type, COUNT(Id) FROM Case WHERE CreatedDate = THIS_MONTH GROUP BY Type ORDER BY COUNT(Id) DESC

// 12
// Selecione quais s√£o as despesas criadas por empresas que est√£o inativas

OBS: Criado objeto chamado "Empresa", e dentro o campo ¬®Ativa¬® e relacionamento de pesquisa vinculado ao objeto ¬®Despesa¬®

SELECT Name, (
  SELECT Name, Tipo__c FROM Despesas__r
) FROM Empresa__c WHERE Ativa__c = True

// 13
// O Time de neg√≥cios gostaria de saber quais s√£o os clientes que possuem o melhor
faturamento, e quais s√£o os tipos de empresa que possuem.

SELECT Name, AnnualRevenue, Industry FROM Account WHERE AnnualRevenue != null ORDER BY AnnualRevenue DESC

// 14
// Retorne quais contas foram criadas/alteradas por usu√°rios que n√£o s√£o administradores
do Sistema.

SELECT name, CreatedBy.Profile.Name, LastModifiedBy.Profile.name FROM account WHERE CreatedBy.Profile.Name != 'Administrador do sistema' OR LastModifiedBy.Profile.name != 'Administrador do sistema' 

MAGO M√âDIO

// 1
// Imprima no apex o nome e status dos leads com status ‚Äúworking‚Äù e os ‚Äúnot
contacted‚Äù e que possuam ‚ÄòCo‚Äô em qualquer parte do nome.

List<Lead> leads = [SELECT Name, Status FROM Lead WHERE (Status LIKE '%Working%' OR Status LIKE '%Not Contacted%') AND Name LIKE '%Co%' ];
for (Lead lead: leads) {
    System.debug('üéØ Informa√ß√µes do Lead üéØ');
    System.debug('Nome do Lead: ' + lead.Name);
    System.debug('Status do Lead: ' + lead.status + '\n');
}

// 2
// Imprima no apex o nome, cargo e telefone dos contatos que possua United ou Ltd
em qualquer parte do nome da conta.

List<Contact> contacts = [SELECT Name, Title, Phone FROM Contact WHERE Account.Name LIKE '%United%' OR Account.Name LIKE '%Ltd%'];
for (Contact contact: contacts) {
    System.debug('üéØ Informa√ß√µes do Contato üéØ');
    System.debug('Nome do Contato: ' + contact.Name);
    System.debug('Cargo do Contato: ' + contact.Title);
    System.debug('Telefone do Contato: ' + contact.Phone + '\n');
}

MAGO SUPREMO

// 3
// Imprima em apex o nome, phone, rating, data de cria√ß√£o das contas ordenados por
data de cria√ß√£o decrescente, mostrando tamb√©m o nome e telefone dos contatos
ordenados por nome ligados a cada uma das contas.

List<Account> contas = [SELECT Name, Phone, Rating, CreatedDate, (SELECT Name, Phone FROM Contacts ORDER BY Name) FROM Account ORDER by CreatedDate DESC];
for (Account conta: contas) {
    System.debug('üéØ Informa√ß√µes da Conta üéØ');
    System.debug('Nome da Conta: ' + conta.Name);
    System.debug('Telefone da Conta: ' + conta.Phone);
    System.debug('Classifica√ß√£o da Conta: ' + conta.Rating);
    System.debug('Data de cria√ß√£o da Conta: ' + conta.CreatedDAte + '\n');
    
    if (conta.Contacts.size() > 0) {
        System.debug('üìû Informa√ß√µes dos Contatos da Conta üìû');
        for (Contact contact: conta.Contacts) {
            System.debug('Nome do Contato: ' + contact.Name);
            System.debug('Telefone do Contato: ' + contact.Phone + '\n');
        }
    }
}


